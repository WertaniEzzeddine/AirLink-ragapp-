{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../chatbot.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ChatbotComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const msg_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", msg_r1.sender);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(msg_r1.message);\n  }\n}\nexport class ChatbotComponent {\n  constructor(chatbotService) {\n    this.chatbotService = chatbotService;\n    this.messages = [];\n    this.userMessage = '';\n  }\n  ngOnInit() {}\n  sendMessage() {\n    if (this.userMessage.trim()) {\n      // Push user's message to the chat\n      this.messages.push({\n        sender: 'user',\n        message: this.userMessage\n      });\n      // Send the user's query to the chatbot service\n      this.chatbotService.sendQuery(this.userMessage).subscribe(response => {\n        // Assuming the response is an object with a `response` key\n        const chatbotResponse = response?.response?.response || 'No response available';\n        // Push the bot's response to the chat\n        this.messages.push({\n          sender: 'bot',\n          message: chatbotResponse\n        });\n        this.userMessage = ''; // Clear input field after sending\n      }, error => {\n        console.error('Error:', error);\n        this.messages.push({\n          sender: 'bot',\n          message: 'Sorry, something went wrong.'\n        });\n      });\n    }\n  }\n  static {\n    this.ɵfac = function ChatbotComponent_Factory(t) {\n      return new (t || ChatbotComponent)(i0.ɵɵdirectiveInject(i1.ChatbotService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatbotComponent,\n      selectors: [[\"app-chatbot\"]],\n      decls: 7,\n      vars: 2,\n      consts: [[1, \"chat-container\"], [1, \"messages\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"input-area\"], [\"placeholder\", \"Type a message\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [3, \"ngClass\"]],\n      template: function ChatbotComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtemplate(2, ChatbotComponent_div_2_Template, 3, 2, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"input\", 4);\n          i0.ɵɵlistener(\"ngModelChange\", function ChatbotComponent_Template_input_ngModelChange_4_listener($event) {\n            return ctx.userMessage = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function ChatbotComponent_Template_button_click_5_listener() {\n            return ctx.sendMessage();\n          });\n          i0.ɵɵtext(6, \"Send\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.userMessage);\n        }\n      },\n      dependencies: [i2.NgClass, i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n      styles: [\"*[_ngcontent-%COMP%] {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n}\\n\\nbody[_ngcontent-%COMP%] {\\n  font-family: Arial, sans-serif;\\n  height: 100vh;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  background-color: #f4f4f4;\\n}\\n\\n.layout-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.left-panel[_ngcontent-%COMP%] {\\n  width: 30%; \\n  background-color: #e9ecef;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 10px;\\n}\\n\\n.left-panel[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  max-width: 100%;\\n  max-height: 100%;\\n  border: 2px solid #ccc;\\n  border-radius: 8px;\\n}\\n\\n.chat-container[_ngcontent-%COMP%] {\\n  width: 70%; \\n  display: flex;\\n  flex-direction: column;\\n  background-color: #fff;\\n  padding: 20px;\\n  border-left: 1px solid #ccc;\\n}\\n\\n.messages[_ngcontent-%COMP%] {\\n  flex: 1;\\n  overflow-y: auto;\\n  margin-bottom: 10px;\\n  padding: 10px;\\n  border: 1px solid #ddd;\\n  border-radius: 8px;\\n  background-color: #f9f9f9;\\n}\\n\\n.messages[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n  margin-bottom: 10px;\\n}\\n\\n.messages[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin: 0;\\n}\\n\\n.input-area[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 10px;\\n}\\n\\n.input-area[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  flex: 1;\\n  padding: 10px;\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n}\\n\\n.input-area[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 10px 20px;\\n  background-color: #007bff;\\n  color: #fff;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\\n.input-area[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhdGJvdC9jaGF0Ym90LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGtCQUFBO0FBQ0E7RUFDRSxTQUFBO0VBQ0EsVUFBQTtFQUNBLHNCQUFBO0FBQ0Y7O0FBRUE7RUFDRSw4QkFBQTtFQUNBLGFBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLHlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7QUFDRjs7QUFFQTtFQUNFLFVBQUEsRUFBQSx1Q0FBQTtFQUNBLHlCQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0FBQ0Y7O0FBRUE7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxVQUFBLEVBQUEsaUNBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxzQkFBQTtFQUNBLGFBQUE7RUFDQSwyQkFBQTtBQUNGOztBQUVBO0VBQ0UsT0FBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLHlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UsU0FBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLFNBQUE7QUFDRjs7QUFFQTtFQUNFLE9BQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSx5QkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyogR2VuZXJhbCByZXNldCAqL1xyXG4qIHtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMDtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG5ib2R5IHtcclxuICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7XHJcbiAgaGVpZ2h0OiAxMDB2aDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjRmNDtcclxufVxyXG5cclxuLmxheW91dC1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcblxyXG4ubGVmdC1wYW5lbCB7XHJcbiAgd2lkdGg6IDMwJTsgLyogQWRqdXN0IHRoZSB3aWR0aCBvZiB0aGUgbGVmdCBwYW5lbCAqL1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNlOWVjZWY7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuXHJcbi5sZWZ0LXBhbmVsIGltZyB7XHJcbiAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gIG1heC1oZWlnaHQ6IDEwMCU7XHJcbiAgYm9yZGVyOiAycHggc29saWQgI2NjYztcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbn1cclxuXHJcbi5jaGF0LWNvbnRhaW5lciB7XHJcbiAgd2lkdGg6IDcwJTsgLyogUmVtYWluaW5nIHdpZHRoIGZvciB0aGUgY2hhdCAqL1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjY2NjO1xyXG59XHJcblxyXG4ubWVzc2FnZXMge1xyXG4gIGZsZXg6IDE7XHJcbiAgb3ZlcmZsb3cteTogYXV0bztcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcclxufVxyXG5cclxuLm1lc3NhZ2VzIGRpdiB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuLm1lc3NhZ2VzIHAge1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxuLmlucHV0LWFyZWEge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZ2FwOiAxMHB4O1xyXG59XHJcblxyXG4uaW5wdXQtYXJlYSBpbnB1dCB7XHJcbiAgZmxleDogMTtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcblxyXG4uaW5wdXQtYXJlYSBidXR0b24ge1xyXG4gIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uaW5wdXQtYXJlYSBidXR0b246aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDU2YjM7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;;IAEMA,8BAAyD;IACpDA,YAAiB;IAAAA,iBAAI;;;;IADQA,uCAAsB;IACnDA,eAAiB;IAAjBA,oCAAiB;;;ACK5B,OAAM,MAAOC,gBAAgB;EAI3BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAHlC,aAAQ,GAA0C,EAAE;IACpD,gBAAW,GAAW,EAAE;EAE6B;EAErDC,QAAQ,IAAU;EAElBC,WAAW;IACT,IAAI,IAAI,CAACC,WAAW,CAACC,IAAI,EAAE,EAAE;MAC3B;MACA,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE,MAAM;QAAEC,OAAO,EAAE,IAAI,CAACL;MAAW,CAAE,CAAC;MAEjE;MACA,IAAI,CAACH,cAAc,CAACS,SAAS,CAAC,IAAI,CAACN,WAAW,CAAC,CAACO,SAAS,CACtDC,QAAQ,IAAI;QACX;QACA,MAAMC,eAAe,GAAGD,QAAQ,EAAEA,QAAQ,EAAEA,QAAQ,IAAI,uBAAuB;QAE/E;QACA,IAAI,CAACN,QAAQ,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAE,KAAK;UAAEC,OAAO,EAAEI;QAAe,CAAE,CAAC;QAC/D,IAAI,CAACT,WAAW,GAAG,EAAE,CAAC,CAAE;MAC1B,CAAC,EACAU,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9B,IAAI,CAACR,QAAQ,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAE,KAAK;UAAEC,OAAO,EAAE;QAA8B,CAAE,CAAC;MAChF,CAAC,CACF;;EAEL;;;uBA7BWV,gBAAgB;IAAA;EAAA;;;YAAhBA,gBAAgB;MAAAiB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDR7BtB,8BAA4B;UAEtBA,iEAEM;UACRA,iBAAM;UAENA,8BAAwB;UACfA;YAAA;UAAA,EAAyB;UAAhCA,iBAAgE;UAChEA,iCAAgC;UAAxBA;YAAA,OAASuB,iBAAa;UAAA,EAAC;UAACvB,oBAAI;UAAAA,iBAAS;;;UAPxBA,eAAW;UAAXA,sCAAW;UAMzBA,eAAyB;UAAzBA,yCAAyB","names":["i0","ChatbotComponent","constructor","chatbotService","ngOnInit","sendMessage","userMessage","trim","messages","push","sender","message","sendQuery","subscribe","response","chatbotResponse","error","console","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\sarra\\Documents\\AirLink\\FrontEnd\\src\\app\\chatbot\\chatbot.component.html","C:\\Users\\sarra\\Documents\\AirLink\\FrontEnd\\src\\app\\chatbot\\chatbot.component.ts"],"sourcesContent":["<div class=\"chat-container\">\n    <div class=\"messages\">\n      <div *ngFor=\"let msg of messages\" [ngClass]=\"msg.sender\">\n        <p>{{ msg.message }}</p>\n      </div>\n    </div>\n  \n    <div class=\"input-area\">\n      <input [(ngModel)]=\"userMessage\" placeholder=\"Type a message\" />\n      <button (click)=\"sendMessage()\">Send</button>\n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ChatbotService } from '../chatbot.service';\n\n@Component({\n  selector: 'app-chatbot',\n  templateUrl: './chatbot.component.html',\n  styleUrls: ['./chatbot.component.scss']\n})\nexport class ChatbotComponent implements OnInit {\n  messages: { sender: string, message: string }[] = [];\n  userMessage: string = '';\n\n  constructor(private chatbotService: ChatbotService) {}\n\n  ngOnInit(): void {}\n\n  sendMessage(): void {\n    if (this.userMessage.trim()) {\n      // Push user's message to the chat\n      this.messages.push({ sender: 'user', message: this.userMessage });\n      \n      // Send the user's query to the chatbot service\n      this.chatbotService.sendQuery(this.userMessage).subscribe(\n        (response) => {\n          // Assuming the response is an object with a `response` key\n          const chatbotResponse = response?.response?.response || 'No response available';\n\n          // Push the bot's response to the chat\n          this.messages.push({ sender: 'bot', message: chatbotResponse });\n          this.userMessage = '';  // Clear input field after sending\n        },\n        (error) => {\n          console.error('Error:', error);\n          this.messages.push({ sender: 'bot', message: 'Sorry, something went wrong.' });\n        }\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}